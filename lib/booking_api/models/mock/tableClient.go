// Code generated by MockGen. DO NOT EDIT.
// Source: tableClient.go

// Package mock_models is a generated GoMock package.
package mock_models

import (
	context "context"
	models "github.com/cobbinma/booking-platform/lib/booking_api/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTableClient is a mock of TableClient interface
type MockTableClient struct {
	ctrl     *gomock.Controller
	recorder *MockTableClientMockRecorder
}

// MockTableClientMockRecorder is the mock recorder for MockTableClient
type MockTableClientMockRecorder struct {
	mock *MockTableClient
}

// NewMockTableClient creates a new mock instance
func NewMockTableClient(ctrl *gomock.Controller) *MockTableClient {
	mock := &MockTableClient{ctrl: ctrl}
	mock.recorder = &MockTableClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTableClient) EXPECT() *MockTableClientMockRecorder {
	return m.recorder
}

// GetTable mocks base method
func (m *MockTableClient) GetTable(ctx context.Context, id models.TableID) (*models.Table, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTable", ctx, id)
	ret0, _ := ret[0].(*models.Table)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTable indicates an expected call of GetTable
func (mr *MockTableClientMockRecorder) GetTable(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTable", reflect.TypeOf((*MockTableClient)(nil).GetTable), ctx, id)
}

// GetTablesWithCapacity mocks base method
func (m *MockTableClient) GetTablesWithCapacity(ctx context.Context, capacity int) ([]models.Table, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTablesWithCapacity", ctx, capacity)
	ret0, _ := ret[0].([]models.Table)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTablesWithCapacity indicates an expected call of GetTablesWithCapacity
func (mr *MockTableClientMockRecorder) GetTablesWithCapacity(ctx, capacity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTablesWithCapacity", reflect.TypeOf((*MockTableClient)(nil).GetTablesWithCapacity), ctx, capacity)
}
