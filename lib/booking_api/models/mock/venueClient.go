// Code generated by MockGen. DO NOT EDIT.
// Source: venueClient.go

// Package mock_models is a generated GoMock package.
package mock_models

import (
	context "context"
	models "github.com/cobbinma/booking/lib/booking_api/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVenueClient is a mock of VenueClient interface
type MockVenueClient struct {
	ctrl     *gomock.Controller
	recorder *MockVenueClientMockRecorder
}

// MockVenueClientMockRecorder is the mock recorder for MockVenueClient
type MockVenueClientMockRecorder struct {
	mock *MockVenueClient
}

// NewMockVenueClient creates a new mock instance
func NewMockVenueClient(ctrl *gomock.Controller) *MockVenueClient {
	mock := &MockVenueClient{ctrl: ctrl}
	mock.recorder = &MockVenueClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVenueClient) EXPECT() *MockVenueClientMockRecorder {
	return m.recorder
}

// GetVenue mocks base method
func (m *MockVenueClient) GetVenue(ctx context.Context, id models.VenueID) (*models.Venue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVenue", ctx, id)
	ret0, _ := ret[0].(*models.Venue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVenue indicates an expected call of GetVenue
func (mr *MockVenueClientMockRecorder) GetVenue(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVenue", reflect.TypeOf((*MockVenueClient)(nil).GetVenue), ctx, id)
}
