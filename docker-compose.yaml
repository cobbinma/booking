version: '3'
services:
  table-api:
    build:
      context: ./lib/table_api
      dockerfile: Dockerfile.dev
    ports:
      - "8989:8989"
    volumes:
      - ./lib/table_api:/go/src
    environment:
      - DB_HOST=table_db
      - DB_PASSWORD=password
      - DB_NAME=table_db
      - DB_USER=user
      - DB_SSLMODE=disable
      - VENUE_API_ROOT=http://venue-api:8888
    depends_on:
      - table_db
    networks:
      main:
        aliases:
          - table-api
  table_db:
    image: "postgres"
    container_name: "table_db"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=table_db
      - POSTGRES_USER=user
    volumes:
      - table_data:/var/lib/postgresql/data
    networks:
      main:
        aliases:
          - table_db
  booking-api:
    build:
      context: ./lib/booking_api
      dockerfile: Dockerfile.dev
    ports:
      - "6969:6969"
    volumes:
      - ./lib/booking_api:/go/src
    environment:
      - DB_HOST=booking_db
      - DB_PASSWORD=password
      - DB_NAME=booking_db
      - DB_USER=user
      - DB_SSLMODE=disable
      - TABLE_API_ROOT=http://table-api:8989
      - VENUE_API_ROOT=http://venue-api:8888
      - ALLOW_ORIGIN=http://localhost:3000
    depends_on:
      - booking_db
    networks:
      main:
        aliases:
          - booking-api
  booking_db:
    image: "postgres"
    container_name: "booking_db"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=booking_db
      - POSTGRES_USER=user
    volumes:
      - ./lib/booking_data:/var/lib/postgresql/data
    networks:
      main:
        aliases:
          - booking_db
  venue-api:
    build:
      context: ./lib/venue_api
      dockerfile: Dockerfile.dev
    ports:
      - "8888:8888"
    volumes:
      - ./lib/venue_api:/go/src
    environment:
      - DB_HOST=venue_db
      - DB_PASSWORD=password
      - DB_NAME=venue_db
      - DB_USER=user
      - DB_SSLMODE=disable
    depends_on:
      - venue_db
    networks:
      main:
        aliases:
          - venue-api
  venue_db:
    image: "postgres"
    container_name: "venue_db"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=venue_db
      - POSTGRES_USER=user
    volumes:
      - venue_data:/var/lib/postgresql/data
    networks:
      main:
        aliases:
          - venue_db
volumes:
  table_data:
  booking_data:
  venue_data:
networks:
  main: